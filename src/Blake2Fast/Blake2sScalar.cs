//------------------------------------------------------------------------------
//	<auto-generated>
//		This code was generated from a template.
//		Manual changes to this file will be overwritten if the code is regenerated.
//	</auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.CompilerServices;

namespace SauceControl.Blake2Fast
{
	unsafe internal partial struct Blake2sContext
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		private static uint ror(uint x, byte y) => (x >> y) ^ (x << (32 - y));

		unsafe private static void mixScalar(Blake2sContext* s, uint* m)
		{
			uint m00 = m[00];
			uint m01 = m[01];
			uint m02 = m[02];
			uint m03 = m[03];
			uint m04 = m[04];
			uint m05 = m[05];
			uint m06 = m[06];
			uint m07 = m[07];
			uint m08 = m[08];
			uint m09 = m[09];
			uint m10 = m[10];
			uint m11 = m[11];
			uint m12 = m[12];
			uint m13 = m[13];
			uint m14 = m[14];
			uint m15 = m[15];

			uint v00 = s->h[0];
			uint v01 = s->h[1];
			uint v02 = s->h[2];
			uint v03 = s->h[3];
			uint v04 = s->h[4];
			uint v05 = s->h[5];
			uint v06 = s->h[6];
			uint v07 = s->h[7];

			uint v08 = 0x6A09E667u;
			uint v09 = 0xBB67AE85u;
			uint v10 = 0x3C6EF372u;
			uint v11 = 0xA54FF53Au;
			uint v12 = 0x510E527Fu;
			uint v13 = 0x9B05688Cu;
			uint v14 = 0x1F83D9ABu;
			uint v15 = 0x5BE0CD19u;

			v12 ^= s->t[0];
			v13 ^= s->t[1];
			v14 ^= s->f[0];

			//ROUND 1
			v00 += m00;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m02;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m04;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m06;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m05;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m07;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m01;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m03;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m08;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m10;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m12;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m14;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m13;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m15;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m09;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m11;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 2
			v00 += m14;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m04;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m09;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m13;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m15;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m06;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m10;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m08;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m01;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m00;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m11;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m05;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m07;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m03;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m12;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m02;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 3
			v00 += m11;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m12;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m05;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m15;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m02;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m13;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m08;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m00;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m10;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m03;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m07;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m09;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m01;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m04;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m14;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m06;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 4
			v00 += m07;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m03;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m13;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m11;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m12;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m14;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m09;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m01;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m02;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m05;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m04;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m15;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m00;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m08;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m06;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m10;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 5
			v00 += m09;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m05;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m02;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m10;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m04;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m15;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m00;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m07;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m14;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m11;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m06;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m03;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m08;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m13;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m01;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m12;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 6
			v00 += m02;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m06;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m00;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m08;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m11;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m03;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m12;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m10;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m04;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m07;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m15;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m01;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m14;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m09;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m13;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m05;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 7
			v00 += m12;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m01;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m14;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m04;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m13;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m10;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m05;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m15;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m00;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m06;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m09;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m08;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m02;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m11;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m07;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m03;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 8
			v00 += m13;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m07;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m12;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m03;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m01;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m09;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m11;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m14;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m05;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m15;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m08;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m02;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m06;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m10;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m00;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m04;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 9
			v00 += m06;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m14;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m11;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m00;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m03;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m08;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m15;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m09;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m12;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m13;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m01;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m10;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m04;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m05;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m02;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m07;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			//ROUND 10
			v00 += m10;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 16);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 12);

			v01 += m08;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 16);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 12);

			v02 += m07;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 16);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 12);

			v03 += m01;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 16);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 12);

			v02 += m06;
			v02 += v06;
			v14 ^= v02;
			v14 = ror(v14, 8);
			v10 += v14;
			v06 ^= v10;
			v06 = ror(v06, 7);

			v03 += m05;
			v03 += v07;
			v15 ^= v03;
			v15 = ror(v15, 8);
			v11 += v15;
			v07 ^= v11;
			v07 = ror(v07, 7);

			v00 += m02;
			v00 += v04;
			v12 ^= v00;
			v12 = ror(v12, 8);
			v08 += v12;
			v04 ^= v08;
			v04 = ror(v04, 7);

			v01 += m04;
			v01 += v05;
			v13 ^= v01;
			v13 = ror(v13, 8);
			v09 += v13;
			v05 ^= v09;
			v05 = ror(v05, 7);

			v00 += m15;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 16);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 12);

			v01 += m09;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 16);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 12);

			v02 += m03;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 16);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 12);

			v03 += m13;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 16);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 12);

			v02 += m12;
			v02 += v07;
			v13 ^= v02;
			v13 = ror(v13, 8);
			v08 += v13;
			v07 ^= v08;
			v07 = ror(v07, 7);

			v03 += m00;
			v03 += v04;
			v14 ^= v03;
			v14 = ror(v14, 8);
			v09 += v14;
			v04 ^= v09;
			v04 = ror(v04, 7);

			v00 += m11;
			v00 += v05;
			v15 ^= v00;
			v15 = ror(v15, 8);
			v10 += v15;
			v05 ^= v10;
			v05 = ror(v05, 7);

			v01 += m14;
			v01 += v06;
			v12 ^= v01;
			v12 = ror(v12, 8);
			v11 += v12;
			v06 ^= v11;
			v06 = ror(v06, 7);

			s->h[0] ^= v00 ^ v08;
			s->h[1] ^= v01 ^ v09;
			s->h[2] ^= v02 ^ v10;
			s->h[3] ^= v03 ^ v11;
			s->h[4] ^= v04 ^ v12;
			s->h[5] ^= v05 ^ v13;
			s->h[6] ^= v06 ^ v14;
			s->h[7] ^= v07 ^ v15;
		}
	}
}
